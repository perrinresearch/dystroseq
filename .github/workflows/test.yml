name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run unit tests
      run: |
        pytest tests/test_seq_utils.py tests/test_ensembl_client.py -v --tb=short
    
    - name: Run integration tests (if network available)
      run: |
        pytest tests/test_integration.py -v --tb=short || echo "Integration tests skipped (no network)"
      continue-on-error: true
    
    - name: Generate coverage report
      run: |
        pytest --cov=dystroseq --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy
    
    - name: Lint with flake8
      run: |
        flake8 dystroseq tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 dystroseq tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      run: |
        mypy dystroseq --ignore-missing-imports || echo "Type checking completed with warnings"
      continue-on-error: true

  example-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run example test
      run: |
        python -m dystroseq --species homo_sapiens --gene DMD --variant "chrX:g.31805775-31932165del" --out test_output
        ls -la test_output/
        echo "Files created:"
        ls test_output/ | wc -l
      continue-on-error: true

